diff -w -r -u Chart18b/source/org/jfree/data/DefaultKeyedValues.java Chart18b_Patch/source/org/jfree/data/DefaultKeyedValues.java
--- Chart18b/source/org/jfree/data/DefaultKeyedValues.java	2019-03-31 14:16:09.000000000 -0400
+++ Chart18b_Patch/source/org/jfree/data/DefaultKeyedValues.java	2019-03-31 14:16:09.000000000 -0400
@@ -315,10 +315,8 @@
     public void removeValue(int index) {
         this.keys.remove(index);
         this.values.remove(index);
-        if (index < this.keys.size()) {
         rebuildIndex();
         }
-    }
 
     /**
      * Removes a value from the collection.
@@ -332,6 +330,9 @@
     public void removeValue(Comparable key) {
         int index = getIndex(key);
         if (index < 0) {
+			if (index < 0) {
+				throw new UnknownKeyException("Key not found: " + key);
+			}
 			return;
         }
         removeValue(index);
diff -w -r -u Chart18b/source/org/jfree/data/DefaultKeyedValues2D.java Chart18b_Patch/source/org/jfree/data/DefaultKeyedValues2D.java
--- Chart18b/source/org/jfree/data/DefaultKeyedValues2D.java	2019-03-31 14:16:09.000000000 -0400
+++ Chart18b_Patch/source/org/jfree/data/DefaultKeyedValues2D.java	2019-03-31 14:16:09.000000000 -0400
@@ -453,9 +453,8 @@
      */
     public void removeColumn(Comparable columnKey) {
         Iterator iterator = this.rows.iterator();
-        while (iterator.hasNext()) {
-            DefaultKeyedValues rowData = (DefaultKeyedValues) iterator.next();
-                rowData.removeValue(columnKey);
+        if (!(this.columnKeys.contains(columnKey))) {
+			throw new UnknownKeyException("Unrecognised columnKey: " + columnKey);
         }
         this.columnKeys.remove(columnKey);
     }
